version: '3.1'

services: # container setting info

  portainer-docker:
    container_name: portainer-container
    image: portainer/portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - db-network
    ports:
      - "9090:9000"

  mysql-docker:
    container_name: mysql-container
    image: mysql:8.0
    volumes:
      - db-mysql:/var/lib/mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=jamjam
      - MYSQL_DATABASE=jamjam
      - MYSQL_USER=jamjam
      - MYSQL_PASSWORD=jamjama604
    networks:
      - db-network
    ports:
      - "3306:3306"

  redis-docker:
    container_name: redis-container
    image: redis:7.0
    ports:
      - "6379:6379"
    volumes:
      - db-redis:/var/lib/redis
    networks:
      - db-network

  spring-blue:
    container_name: spring-blue
    build:
      context: ./
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - '8080:8080'
    networks:
      - db-network
    depends_on:
      - mysql-docker
      - redis-docker

  spring-green:
    container_name: spring-green
    build:
      context: ./
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - '8081:8080'
    networks:
      - db-network
    depends_on:
      - mysql-docker
      - redis-docker

volumes:
  db-mysql:
  db-redis:
  portainer_data:

networks:
  db-network:
    driver: bridge
